<?php 
	/**********************************************************
	 **** File generated by fitzlucassen\DALGenerator tool ****
	 * All right reserved to fitzlucassen repository on github*
	 ************* https://github.com/fitzlucassen ************
	 **********************************************************/
	namespace fitzlucassen\FLFramework\Data\Base\Entity;

	use fitzlucassen\FLFramework\Library\Core;
	use fitzlucassen\FLFramework\Data\Entity;

	class UserBase  {
		private $_id;
		private $_isCompany;
		private $_companyName;
		private $_companySiret;
		private $_firstname;
		private $_lastname;
		private $_phoneNumber;
		private $_email;
		private $_address;
		private $_zipcode;
		private $_city;
		private $_isActive;
		private $_fromCompany;
		private $_password;
		private $_creationDate;
		private $_queryBuilder;

		public function __construct($id = '', $isCompany = '', $companyName = '', $companySiret = '', $firstname = '', $lastname = '', $phoneNumber = '', $email = '', $address = '', $zipcode = '', $city = '', $isActive = '', $fromCompany = '', $password = '', $creationDate = ''){
			$this->_queryBuilder = new Core\QueryBuilder(true);
			$this->fillObject(array("id" => $id, "isCompany" => $isCompany, "companyName" => $companyName, "companySiret" => $companySiret, "firstname" => $firstname, "lastname" => $lastname, "phoneNumber" => $phoneNumber, "email" => $email, "address" => $address, "zipcode" => $zipcode, "city" => $city, "isActive" => $isActive, "fromCompany" => $fromCompany, "password" => $password, "creationDate" => $creationDate));
		}

		/***********
		 * GETTERS *
		 ***********/
		public function getId() {
			return $this->_id;
		}
		public function getIsCompany() {
			return $this->_isCompany;
		}
		public function getCompanyName() {
			return $this->_companyName;
		}
		public function getCompanySiret() {
			return $this->_companySiret;
		}
		public function getFirstname() {
			return $this->_firstname;
		}
		public function getLastname() {
			return $this->_lastname;
		}
		public function getPhoneNumber() {
			return $this->_phoneNumber;
		}
		public function getEmail() {
			return $this->_email;
		}
		public function getAddress() {
			return $this->_address;
		}
		public function getZipcode() {
			return $this->_zipcode;
		}
		public function getCity() {
			return $this->_city;
		}
		public function getIsActive() {
			return $this->_isActive;
		}
		public function getFromCompany() {
			return $this->_fromCompany;
		}
		public function getPassword() {
			return $this->_password;
		}
		public function getCreationDate() {
			return $this->_creationDate;
		}
		/*******
		 * END *
		 *******/

		public function fillObject($properties) {
			if(!empty($properties["id"]))
				$this->_id = $properties["id"];
			if(!empty($properties["isCompany"]))
				$this->_isCompany = $properties["isCompany"];
			if(!empty($properties["companyName"]))
				$this->_companyName = $properties["companyName"];
			if(!empty($properties["companySiret"]))
				$this->_companySiret = $properties["companySiret"];
			if(!empty($properties["firstname"]))
				$this->_firstname = $properties["firstname"];
			if(!empty($properties["lastname"]))
				$this->_lastname = $properties["lastname"];
			if(!empty($properties["phoneNumber"]))
				$this->_phoneNumber = $properties["phoneNumber"];
			if(!empty($properties["email"]))
				$this->_email = $properties["email"];
			if(!empty($properties["address"]))
				$this->_address = $properties["address"];
			if(!empty($properties["zipcode"]))
				$this->_zipcode = $properties["zipcode"];
			if(!empty($properties["city"]))
				$this->_city = $properties["city"];
			if(!empty($properties["isActive"]))
				$this->_isActive = $properties["isActive"];
			if(!empty($properties["fromCompany"]))
				$this->_fromCompany = $properties["fromCompany"];
			if(!empty($properties["password"]))
				$this->_password = $properties["password"];
			if(!empty($properties["creationDate"]))
				$this->_creationDate = $properties["creationDate"];
		}
	}
